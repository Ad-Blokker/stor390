{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Getting Started with R\"\nauthor: \"Iain Carmichael\"\ndate: \"November 5, 2016\"\noutput: html_document\n---\n\n\n\n# Install R\n\nDownload the latest version of R from the [Comprehensive R Archive Network](https://cran.rstudio.com/) (CRAN). [R](https://www.r-project.org/about.html) is a programming language built for statistical analysis.\n\n# Install R Studio\n\nDownload [R Studio](https://www.rstudio.com/products/rstudio/#Desktop) which is an [IDE](https://en.wikipedia.org/wiki/Integrated_development_environment) built for R. While you can use R without R Studio, R Studio makes life much better.\n\nTODO: add pic of R studio\n\n# Basic R commands\nYou downloaded [base R](https://www.rstudio.com/wp-content/uploads/2016/05/base-r.pdf) from CRAN.\n\nRun the following in your R console\n```{r 11}\n1 + 1\n```\n\n```{r var}\na <- 1\nb <- 2\na + b\n```\n\n# Packages\nThe power of R comes from the many wonderful R packages people develope. R is an [open source](https://en.wikipedia.org/wiki/Open-source_software) language meaning anyone can develope a new R package. \n\nYou can install a package from [CRAN](https://cran.r-project.org/) like this\n```{r install, eval=FALSE}\ninstall.packages(\"tidyverse\")\n```\n\nThere are other sources of R packags such as [Bioconductor](http://www.bioconductor.org/) and [Github](https://github.com/). Packages from CRAN and Bioconductor are vetted (though not perfectly). Packages on Github are not.\n\nTo use code from an R package you need to load it\n```{r loadpackage}\n# ignore the warnings for now\nlibrary(tidyverse)\n```\nYou need to load an R package everytime you want to use it. You only need to install it once.\n\n# IMBD\nLoad the [movies data set](http://www2.stat.duke.edu/~mc301/data/movies.html) generously currated by [Mine Cetinkaya-Rundel](http://www2.stat.duke.edu/~mc301/)\n```{r load movies}\nload(url('https://stat.duke.edu/~mc301/data/movies.Rdata'))\n```\n\n\n\nThe first thing you should do when you get a data set is [look at it](https://www.youtube.com/watch?v=EF8GhC-T_Mo). \n\n## numerical summaries\n\n`head()` prints the first six rows of a data set (and as many columns that will fit on the screen)\n```{r head}\nhead(movies)\n```\n\n\nIf you double click a data frame it will pull up R's built in spreadsheet\n![](spreadsheet.png)\n\n`str()` gives a different view of the columns and includes some metadata\n```{r str}\nstr(movies)\n```\n\n`summary()` prints out some descriptive statistics of each column\n```{r summ}\nsummary(movies)\n```\n\n## Vizualization\nYou can only learn so much by looking a lists of numbers. Let's make some plots.\n\nThere are two popular plotting systmes in R. There is the *base* R system\n\n```{r base_plot}\nplot(movies$imdb_rating, movies$critics_score)\n```\n\nand [ggplot2](http://ggplot2.org/).\n\n```{r ggplot}\n# ggplot was loaded with tidyverse\nggplot(data = movies) + geom_point(mapping = aes(x = imdb_rating, y = critics_score))\n```\n\nWe will use ggplot2 in this course (see readings below about ggplot2 vs base). ggplot2 can be a bit intimidating at first -- especially if you are used to base plotting. \n\n```{r hist, warning=FALSE}\nggplot(data=movies, aes(x=audience_score)) + geom_histogram()\n```\n\nggplot2 has a ton of functionality built it and you will learn to love it when you get used to it.\n\n```{r byrating, warning=FALSE}\nggplot(data = movies) + geom_point(mapping = aes(x = imdb_rating, y = critics_score, color=mpaa_rating))\n```\n\n# Getting help\nThe main textbook for this class is [R for Data Science](http://r4ds.had.co.nz/data-visualisation.html) written by Hadley Whickham (it's free online). I have put up a long list of alternative resources (textbooks, coursera courses, etc) [HERE TOOD](). \n\nGoogle and [StackOverflow](http://stackoverflow.com/) will become your best friends. If you have a question, chances are someone has already asked and answered it. If R gives you an error message you don't understand google it -- someone else has probably figured it out and posted it online.\n\nThe course staff is of course here to help you. If you get stuck on something **spend at least 5 minutes Googling/hacking at it**. There is a good chance the first the one of us will do is turn to google. **Don't spend more than 20 minutes stuck on one thing** -- at this point you should as for help.\n\n# Homework\n\n## reading\n- read the secions 1, 2, 3.1-3.5 of [r4ds](http://r4ds.had.co.nz/introduction.html)\n- read Jenny Bryan's tutorial on the [R workspace](http://stat545.com/block002_hello-r-workspace-wd-project.html)\nhttp://stat545.com/block002_hello-r-workspace-wd-project.html\n\n## coding\nfind and analyze a data set from [data.gov](https://www.data.gov/). See [TODO:]() for details\n\n# References\n- ggplot2 vs. base plotting\n    - [Why I don't use ggplot2](http://simplystatistics.org/2016/02/11/why-i-dont-use-ggplot2/)\n    - [Why I use ggplot2](http://varianceexplained.org/r/why-I-use-ggplot2/)\n",
    "created" : 1483981188652.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2948142634",
    "id" : "A89CCAFD",
    "lastKnownWriteTime" : 1483992709,
    "last_content_update" : 1483992709025,
    "path" : "~/Dropbox/UNC/Data Science and STOR/STOR390/lectures/getting_started/getting_started.Rmd",
    "project_path" : "getting_started.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}